{"version":3,"sources":["containers/layout.js","components/herogrid.js","components/searchbar.js","components/teamcomposition.js","components/changeteambutton.js","App.js","serviceWorker.js","index.js"],"names":["CustomLayout","flex-direction","slot","this","props","children","style","margin","maxWidth","grid-cols","minWidth","marginTop","columns","rows","slice","label","grid-rows","flat","React","Component","returnMap","hero","i","name","areas","index","team","shape","coords","fillColor","HeroGrid","renderHeroes","heroList","map","src","hero_name","onClick","area","onPress","key","width","SearchBar","onChange","value","input","TeamComposition","renderTeam","radiant","radiantCard","backgroundColor","alt","ChangeTeamButton","buttonLabel","position","left","disabled","invertButtonOnPress","icon","teamButtonOnPress","App","invertTeam","setState","state","temp","radiantHeroes","direHeroes","invertTeamAndHeroes","handlePress","event","teamRadiant","length","heroName","heroesList","indexOf","heroSideRadiant","teamHeroes","splice","handleChange","target","getHeroList","hero_list","forEach","includes","push","heroes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ef472144.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass CustomLayout extends React.Component {\r\n  render() {\r\n    return (\r\n      <kor-page flex-direction='column'>\r\n        <kor-app-bar slot='top'></kor-app-bar>\r\n        <kor-nav-bar flex-direction='column' slot='top'>\r\n          {this.props.children[1]}\r\n          {this.props.children[2]}\r\n        </kor-nav-bar>\r\n        <kor-grid style={{ margin: 'auto', maxWidth: '1200px' }}>\r\n          <kor-card grid-cols='2' style={{ minWidth: '140px' }}>\r\n            <kor-tabs slot='header' style={{ marginTop: '0px' }}>\r\n              {this.props.children[0]}\r\n            </kor-tabs>\r\n            {this.props.children[3]}\r\n          </kor-card>\r\n          <kor-card grid-cols='10'>\r\n            <kor-grid columns='9' rows='4'>\r\n              {this.props.children.slice(4, 7)}\r\n              <kor-card label='Core' grid-cols='4' grid-rows='3'>\r\n                Core suggestions\r\n              </kor-card>\r\n              <kor-card grid-cols='1' grid-rows='2' flat={true}></kor-card>\r\n              <kor-card label='Support' grid-cols='4' grid-rows='3'>\r\n                Support suggestions\r\n              </kor-card>\r\n            </kor-grid>\r\n          </kor-card>\r\n        </kor-grid>\r\n      </kor-page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomLayout;\r\n","import React from \"react\";\r\n\r\nimport ImageMapper from \"react-image-mapper\";\r\n\r\nfunction getImageLink(hero_name) {\r\n  return `https://cdn.dota2.com/apps/dota2/images/heroes/${hero_name}_lg.png`;\r\n}\r\n\r\nfunction returnMap(hero, i) {\r\n  let MAP = {\r\n    name: hero,\r\n    areas: [\r\n      {\r\n        name: hero,\r\n        index: i,\r\n        team: false,\r\n        shape: \"rect\",\r\n        coords: [0, 0, 57, 65],\r\n        fillColor: \"rgba(255, 0, 0, 0.3)\"\r\n      },\r\n      {\r\n        name: hero,\r\n        index: i,\r\n        team: true,\r\n        shape: \"rect\",\r\n        coords: [57, 0, 115, 65],\r\n        fillColor: \"rgba(0, 220, 0, 0.3)\"\r\n      }\r\n    ]\r\n  };\r\n  return MAP;\r\n}\r\n\r\nclass HeroGrid extends React.Component {\r\n  render() {\r\n    return this.renderHeroes();\r\n  }\r\n\r\n  renderHeroes() {\r\n    return this.props.heroList().map((hero, i) => {\r\n      return (\r\n        <ImageMapper\r\n          src={getImageLink(hero)}\r\n          map={returnMap(hero, i)}\r\n          onClick={area => this.props.onPress(area)}\r\n          key={i}\r\n          width={115}\r\n          style={{ margin: \"10px\" }}\r\n        />\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nexport default HeroGrid;\r\n","import React from \"react\";\r\n\r\nclass SearchBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <input\r\n        onChange={this.props.onChange}\r\n        value={this.props.input}\r\n        style={{ width: \"100%\" }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nfunction getImageLink(hero_name) {\r\n  return `https://cdn.dota2.com/apps/dota2/images/heroes/${hero_name}_lg.png`;\r\n}\r\n\r\nclass TeamComposition extends React.Component {\r\n  render() {\r\n    return this.renderTeam();\r\n  }\r\n\r\n  renderTeam() {\r\n    return (\r\n      <kor-card\r\n        grid-cols=\"4\"\r\n        grid-rows=\"1\"\r\n        label={\r\n          this.props.radiant & this.props.radiantCard ||\r\n          !this.props.radiant & !this.props.radiantCard\r\n            ? \"Team\"\r\n            : \"Enemy\"\r\n        }\r\n        flex-direction=\"row\"\r\n        style={{\r\n          backgroundColor:\r\n            this.props.radiant & this.props.radiantCard ||\r\n            !this.props.radiant & !this.props.radiantCard\r\n              ? \"rgba(0,200,0,.25)\"\r\n              : \"rgba(255,0,0,.25)\"\r\n        }}\r\n      >\r\n        <div>\r\n          {this.props.heroList\r\n            ? this.props.heroList.map(hero => {\r\n                return (\r\n                  <img\r\n                    src={getImageLink(hero)}\r\n                    key={hero}\r\n                    alt={hero}\r\n                    style={{\r\n                      maxWidth: \"82px\",\r\n                      margin: \"2px\"\r\n                    }}\r\n                  />\r\n                );\r\n              })\r\n            : \"\"}\r\n        </div>\r\n      </kor-card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeamComposition;\r\n","import React from \"react\";\r\n\r\nclass ChangeTeamButton extends React.Component {\r\n  render() {\r\n    if (\r\n      (this.props.buttonLabel === \"Radiant\") & this.props.radiant ||\r\n      (this.props.buttonLabel === \"Dire\") & !this.props.radiant\r\n    ) {\r\n      return (\r\n        <kor-button\r\n          label={this.props.buttonLabel}\r\n          style={{ margin: \"5px\", position: \"relative\", left: \"30%\" }}\r\n          disabled\r\n        />\r\n      );\r\n    } else if (this.props.buttonLabel === \"Invert\") {\r\n      return (\r\n        <kor-button\r\n          onClick={this.props.invertButtonOnPress}\r\n          icon=\"compare_arrows\"\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <kor-button\r\n          onClick={this.props.teamButtonOnPress}\r\n          label={this.props.buttonLabel}\r\n          style={{ margin: \"5px\", position: \"relative\", left: \"30%\" }}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ChangeTeamButton;\r\n","import React from \"react\";\n\nimport CustomLayout from \"./containers/layout\";\nimport HeroGrid from \"./components/herogrid\";\nimport SearchBar from \"./components/searchbar\";\nimport TeamComposition from \"./components/teamcomposition\";\nimport ChangeTeamButton from \"./components/changeteambutton\";\n\nimport heroes from \"./heroes.json\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      heroesList: heroes,\n      input: \"\",\n      radiantHeroes: [],\n      direHeroes: [],\n      radiant: true\n    };\n  }\n\n  render() {\n    return (\n      <CustomLayout>\n        <SearchBar input={this.state.input} onChange={this.handleChange} />\n        <ChangeTeamButton\n          buttonLabel=\"Radiant\"\n          radiant={this.state.radiant}\n          teamButtonOnPress={this.invertTeamAndHeroes}\n        />\n        <ChangeTeamButton\n          buttonLabel=\"Dire\"\n          radiant={this.state.radiant}\n          teamButtonOnPress={this.invertTeamAndHeroes}\n        />\n        <center>\n          <HeroGrid heroList={this.getHeroList} onPress={this.handlePress} />\n        </center>\n\n        <TeamComposition\n          radiantCard={true}\n          heroList={this.state.radiantHeroes}\n          radiant={this.state.radiant}\n        />\n        <ChangeTeamButton\n          buttonLabel=\"Invert\"\n          icon=\"compare_arrows\"\n          invertButtonOnPress={this.invertTeam}\n        />\n\n        <TeamComposition\n          radiantCard={false}\n          heroList={this.state.direHeroes}\n          radiant={this.state.radiant}\n        />\n      </CustomLayout>\n    );\n  }\n\n  invertTeam = () => {\n    this.setState(state => {\n      const temp = state.radiantHeroes;\n      return {\n        radiantHeroes: state.direHeroes,\n        direHeroes: temp\n      };\n    });\n  };\n\n  invertTeamAndHeroes = () => {\n    this.setState(state => {\n      const temp = state.radiantHeroes;\n      return {\n        radiant: !state.radiant,\n        radiantHeroes: state.direHeroes,\n        direHeroes: temp\n      };\n    });\n  };\n\n  handlePress = event => {\n    const teamRadiant = event.team;\n    if (\n      (this.state.radiantHeroes.length >= 5) & teamRadiant ||\n      (this.state.direHeroes.length >= 5) & !teamRadiant\n    ) {\n      return;\n    } else {\n      const heroName = event.name;\n      const index = this.state.heroesList.indexOf(heroName);\n      this.setState(state => {\n        /*  check if your team is radiant or dire, and \n        if you want to add the hero to your team or \n        enemy team */\n        const heroSideRadiant = !(this.state.radiant\n          ? !teamRadiant\n          : teamRadiant)\n          ? true\n          : false;\n        const teamHeroes = heroSideRadiant\n          ? [...this.state.radiantHeroes, heroName]\n          : [...this.state.direHeroes, heroName];\n        const heroesList = [...state.heroesList];\n        heroesList.splice(index, 1);\n        return {\n          heroesList: heroesList,\n          [heroSideRadiant ? \"radiantHeroes\" : \"direHeroes\"]: teamHeroes\n        };\n      });\n    }\n  };\n\n  handleChange = event => {\n    this.setState({\n      input: event.target.value\n    });\n  };\n\n  getHeroList = () => {\n    let hero_list = [];\n    if (this.state.input) {\n      this.state.heroesList.forEach(hero => {\n        if (hero.includes(this.state.input)) {\n          hero_list.push(hero);\n        }\n      });\n      return hero_list;\n    } else {\n      return this.state.heroesList;\n    }\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"kor-ui/kor-styles.css\";\nimport \"kor-ui/kor.js\";\nimport \"react-image-mapper\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}