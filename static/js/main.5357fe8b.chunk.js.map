{"version":3,"sources":["containers/layout.js","components/teamcomposition.js","components/changeteambutton.js","components/herogrid.js","components/searchbar.js","components/heroselection.js","components/mctslogic.js","App.js","serviceWorker.js","index.js"],"names":["CustomLayout","flex-direction","slot","this","props","children","style","margin","maxWidth","grid-cols","columns","rows","slice","label","grid-rows","flat","React","Component","TeamComposition","renderTeam","radiant","radiantCard","backgroundColor","heroList","map","hero","onClick","unpickHero","src","hero_name","key","alt","ChangeTeamButton","buttonLabel","position","left","disabled","invertButtonOnPress","icon","teamButtonOnPress","returnMap","i","name","areas","index","team","shape","coords","fillColor","HeroGrid","renderHeroes","area","onPress","width","SearchBar","screenSize","onChange","value","input","HeroSelection","getHeroList","filterdList","state","heroesList","forEach","includes","push","handlePress","event","setState","teamRadiant","radiantHeroes","length","direHeroes","heroName","console","log","chooseHero","handleChange","target","updateDimensions","bind","window","addEventListener","marginTop","innerWidth","Mctslogic","tf","model","len","teamOneHot","Array","Promise","resolve","setTimeout","idx","predict","prediction","App","invertTeam","temp","invertTeamAndHeroes","calculateDisplay","allHeroes","pickedHeroes","prototype","concat","filter","f","pickHero","heroes","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5357fe8b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass CustomLayout extends React.Component {\r\n  render() {\r\n    return (\r\n      <kor-page flex-direction='column'>\r\n        <kor-app-bar slot='top'></kor-app-bar>\r\n        <kor-nav-bar flex-direction='column' slot='top'>\r\n          {this.props.children[1]}\r\n          {this.props.children[2]}\r\n        </kor-nav-bar>\r\n        <kor-grid style={{ margin: 'auto', maxWidth: '1200px' }}>\r\n          <kor-card grid-cols='2'>{this.props.children[0]}</kor-card>\r\n          <kor-card grid-cols='10'>\r\n            <kor-grid columns='9' rows='4'>\r\n              {this.props.children.slice(3)}\r\n              <kor-card label='Core' grid-cols='4' grid-rows='3'>\r\n                MCTS not implemented yet\r\n              </kor-card>\r\n              <kor-card grid-cols='1' grid-rows='2' flat={true}></kor-card>\r\n              <kor-card label='Support' grid-cols='4' grid-rows='3'>\r\n                MCTS not implemented yet\r\n              </kor-card>\r\n            </kor-grid>\r\n          </kor-card>\r\n        </kor-grid>\r\n      </kor-page>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomLayout;\r\n","import React from 'react';\r\n\r\nfunction getImageLink(hero_name) {\r\n  return `https://cdn.dota2.com/apps/dota2/images/heroes/${hero_name}_lg.png`;\r\n}\r\n\r\nclass TeamComposition extends React.Component {\r\n  render() {\r\n    return this.renderTeam();\r\n  }\r\n\r\n  renderTeam() {\r\n    return (\r\n      <kor-card\r\n        grid-cols='4'\r\n        grid-rows='1'\r\n        label={\r\n          this.props.radiant & this.props.radiantCard ||\r\n          !this.props.radiant & !this.props.radiantCard\r\n            ? 'Team'\r\n            : 'Enemy'\r\n        }\r\n        flex-direction='row'\r\n        style={{\r\n          backgroundColor:\r\n            this.props.radiant & this.props.radiantCard ||\r\n            !this.props.radiant & !this.props.radiantCard\r\n              ? 'rgba(0,200,0,.25)'\r\n              : 'rgba(255,0,0,.25)',\r\n        }}\r\n      >\r\n        <div>\r\n          {this.props.heroList\r\n            ? this.props.heroList.map((hero) => {\r\n                return (\r\n                  <img\r\n                    onClick={() =>\r\n                      this.props.unpickHero(hero, this.props.radiantCard)\r\n                    }\r\n                    src={getImageLink(hero)}\r\n                    key={hero}\r\n                    alt={hero}\r\n                    style={{\r\n                      maxWidth: '82px',\r\n                      margin: '2px',\r\n                    }}\r\n                  />\r\n                );\r\n              })\r\n            : ''}\r\n        </div>\r\n      </kor-card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeamComposition;\r\n","import React from \"react\";\r\n\r\nclass ChangeTeamButton extends React.Component {\r\n  render() {\r\n    if (\r\n      (this.props.buttonLabel === \"Radiant\") & this.props.radiant ||\r\n      (this.props.buttonLabel === \"Dire\") & !this.props.radiant\r\n    ) {\r\n      return (\r\n        <kor-button\r\n          label={this.props.buttonLabel}\r\n          style={{ margin: \"5px\", position: \"relative\", left: \"30%\" }}\r\n          disabled\r\n        />\r\n      );\r\n    } else if (this.props.buttonLabel === \"Invert\") {\r\n      return (\r\n        <kor-button\r\n          onClick={this.props.invertButtonOnPress}\r\n          icon=\"compare_arrows\"\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <kor-button\r\n          onClick={this.props.teamButtonOnPress}\r\n          label={this.props.buttonLabel}\r\n          style={{ margin: \"5px\", position: \"relative\", left: \"30%\" }}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ChangeTeamButton;\r\n","import React from 'react';\r\n\r\nimport ImageMapper from 'react-image-mapper';\r\n\r\nfunction getImageLink(hero_name) {\r\n  return `https://cdn.dota2.com/apps/dota2/images/heroes/${hero_name}_lg.png`;\r\n}\r\n\r\nfunction returnMap(hero, i) {\r\n  let MAP = {\r\n    name: hero,\r\n    areas: [\r\n      {\r\n        name: hero,\r\n        index: i,\r\n        team: false,\r\n        shape: 'rect',\r\n        coords: [0, 0, 57, 65],\r\n        fillColor: 'rgba(255, 0, 0, 0.3)',\r\n      },\r\n      {\r\n        name: hero,\r\n        index: i,\r\n        team: true,\r\n        shape: 'rect',\r\n        coords: [57, 0, 115, 65],\r\n        fillColor: 'rgba(0, 220, 0, 0.3)',\r\n      },\r\n    ],\r\n  };\r\n  return MAP;\r\n}\r\n\r\nclass HeroGrid extends React.Component {\r\n  render() {\r\n    return this.renderHeroes();\r\n  }\r\n\r\n  renderHeroes() {\r\n    return this.props.heroList().map((hero, i) => {\r\n      return (\r\n        <ImageMapper\r\n          src={getImageLink(hero)}\r\n          map={returnMap(hero, i)}\r\n          onClick={(area) => this.props.onPress(area)}\r\n          key={i}\r\n          width={115}\r\n          style={{ margin: '10px' }}\r\n        />\r\n      );\r\n    });\r\n  }\r\n}\r\n\r\nexport default HeroGrid;\r\n","import React from 'react';\r\n\r\nclass SearchBar extends React.Component {\r\n  render() {\r\n    if (this.props.screenSize === 's') {\r\n      return null;\r\n    } else {\r\n      return (\r\n        <input\r\n          onChange={this.props.onChange}\r\n          value={this.props.input}\r\n          style={{ width: '100%' }}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\n\r\nimport HeroGrid from './herogrid';\r\nimport SearchBar from './searchbar';\r\n\r\nexport default class HeroSelection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: '',\r\n      screenSize: 'l',\r\n    };\r\n    this.updateDimensions = this.updateDimensions.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.updateDimensions();\r\n    window.addEventListener('resize', this.updateDimensions);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SearchBar\r\n          input={this.state.input}\r\n          onChange={this.handleChange}\r\n          screenSize={this.state.screenSize}\r\n        />\r\n        <div\r\n          style={{\r\n            margin: 'auto',\r\n            marginTop: '0px',\r\n          }}\r\n        >\r\n          <HeroGrid heroList={this.getHeroList} onPress={this.handlePress} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  getHeroList = () => {\r\n    let filterdList = [];\r\n    if (this.state.input) {\r\n      this.props.heroesList.forEach((hero) => {\r\n        if (hero.includes(this.state.input)) {\r\n          filterdList.push(hero);\r\n        }\r\n      });\r\n      return filterdList;\r\n    } else {\r\n      return this.props.heroesList;\r\n    }\r\n  };\r\n\r\n  handlePress = (event) => {\r\n    this.setState({\r\n      input: '',\r\n    });\r\n\r\n    const teamRadiant = event.team;\r\n    if (\r\n      (this.props.radiantHeroes.length >= 5) & teamRadiant ||\r\n      (this.props.direHeroes.length >= 5) & !teamRadiant\r\n    ) {\r\n      return;\r\n    } else {\r\n      const heroName = event.name;\r\n      /*  check if your team is radiant or dire, and \r\n        if you want to add the hero to your team or \r\n        enemy team */\r\n      // XOR\r\n      if (this.props.radiant ? teamRadiant : !teamRadiant) {\r\n        console.log('radi');\r\n        this.props.chooseHero(heroName, 'radiant');\r\n      } else {\r\n        this.props.chooseHero(heroName, 'dire');\r\n      }\r\n    }\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      input: event.target.value,\r\n    });\r\n  };\r\n\r\n  updateDimensions() {\r\n    let screenSize = window.innerWidth < 767 ? 's' : 'l';\r\n    this.setState({ screenSize });\r\n  }\r\n}\r\n","import { Component } from 'react';\r\nimport * as tf from '@tensorflow/tfjs';\r\n\r\nexport default class Mctslogic extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    //this.loadModel();\r\n  }\r\n\r\n  async loadModel() {\r\n    const MODEL_URL = './model/model.json';\r\n    this.state.model = await tf.loadGraphModel(MODEL_URL);\r\n    console.log('Loaded!');\r\n  }\r\n\r\n  async predict() {\r\n    let len = this.props.heroesList.length;\r\n    let teamOneHot = new Array(len);\r\n    for (let i = 0; i < len; ++i) teamOneHot[i] = 0; //initialize one hot\r\n    while (!this.state.model) {\r\n      await new Promise((resolve) => setTimeout(resolve, 1000));\r\n    }\r\n    for (let idx of this.props.heroesList) {\r\n      //fill one hot, 1 for radiant, -1 for dire\r\n      teamOneHot[idx] += 1;\r\n    }\r\n    let prediction = await this.state.model.predict(teamOneHot);\r\n    return prediction;\r\n  }\r\n}\r\n","import React from 'react';\n\nimport CustomLayout from './containers/layout';\nimport TeamComposition from './components/teamcomposition';\nimport ChangeTeamButton from './components/changeteambutton';\nimport HeroSelection from './components/heroselection';\nimport Mctslogic from './components/mctslogic';\n\nimport heroes from './heroes.json';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      heroesList: heroes,\n      allHeroes: heroes,\n      radiantHeroes: [],\n      direHeroes: [],\n      radiant: true,\n    };\n  }\n\n  render() {\n    return (\n      <CustomLayout>\n        <HeroSelection\n          radiantHeroes={this.state.radiantHeroes}\n          direHeroes={this.state.direHeroes}\n          chooseHero={this.pickHero}\n          heroesList={this.state.heroesList}\n          radiant={this.state.radiant}\n        />\n\n        <ChangeTeamButton\n          buttonLabel='Radiant'\n          radiant={this.state.radiant}\n          teamButtonOnPress={this.invertTeamAndHeroes}\n        />\n        <ChangeTeamButton\n          buttonLabel='Dire'\n          radiant={this.state.radiant}\n          teamButtonOnPress={this.invertTeamAndHeroes}\n        />\n\n        <TeamComposition\n          radiantCard={true}\n          heroList={this.state.radiantHeroes}\n          radiant={this.state.radiant}\n          unpickHero={this.unpickHero}\n        />\n        <ChangeTeamButton\n          buttonLabel='Invert'\n          icon='compare_arrows'\n          invertButtonOnPress={this.invertTeam}\n        />\n\n        <TeamComposition\n          radiantCard={false}\n          heroList={this.state.direHeroes}\n          radiant={this.state.radiant}\n          unpickHero={this.unpickHero}\n        />\n        <Mctslogic heroesList={this.state.heroesList} />\n      </CustomLayout>\n    );\n  }\n\n  invertTeam = () => {\n    this.setState((state) => {\n      const temp = state.radiantHeroes;\n      return {\n        radiantHeroes: state.direHeroes,\n        direHeroes: temp,\n      };\n    });\n  };\n\n  invertTeamAndHeroes = () => {\n    this.setState((state) => {\n      const temp = state.radiantHeroes;\n      return {\n        radiant: !state.radiant,\n        radiantHeroes: state.direHeroes,\n        direHeroes: temp,\n      };\n    });\n  };\n\n  calculateDisplay = () => {\n    this.setState((state) => {\n      var heroesList = [...this.state.allHeroes];\n      var pickedHeroes = Array.prototype.concat(\n        state.radiantHeroes,\n        state.direHeroes\n      );\n\n      for (let hero of pickedHeroes) {\n        heroesList = heroesList.filter((f) => f !== hero);\n      }\n      return {\n        heroesList: heroesList,\n      };\n    });\n  };\n\n  pickHero = (heroName, team) => {\n    this.setState((state) => {\n      if (team === 'radiant') {\n        return {\n          radiantHeroes: [...state.radiantHeroes, heroName],\n        };\n      } else {\n        return {\n          direHeroes: [...state.direHeroes, heroName],\n        };\n      }\n    });\n    this.calculateDisplay();\n  };\n\n  unpickHero = (heroName, radiantCard) => {\n    this.setState((state) => {\n      if (radiantCard) {\n        return {\n          radiantHeroes: state.radiantHeroes.filter((f) => f !== heroName),\n        };\n      } else {\n        return {\n          direHeroes: state.direHeroes.filter((f) => f !== heroName),\n        };\n      }\n    });\n    this.calculateDisplay();\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'kor-ui/kor-styles.css';\nimport 'kor-ui/kor.js';\nimport 'react-image-mapper';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}